version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8080:8080"
    environment :
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: dev
      # docker-compose up -d -e SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - redis
      - mysql

  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Nuxt 쪽에서 process.env.API_URL 등을 통해 가져다 쓰면 됩니다
      API_URL: "http://api:8080"
    depends_on:
      - api

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "16379:6379"
    volumes:
      - redis-data:/data

  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234       # root 계정 비밀번호
      MYSQL_DATABASE: webChat                 # 초기 생성할 데이터베이스
      MYSQL_USER: user                    # JPA에서 사용할 계정
      MYSQL_PASSWORD: 1234            # chat_user 비밀번호
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  redis-data:
  mysql_data: